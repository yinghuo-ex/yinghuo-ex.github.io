[{"date":"2021-11-17T08:02:25.938Z","url":"/2021/11/17/%E9%97%B2%E8%81%8A/","categories":[["undefined",""]],"content":"闲聊这里是荧惑，一名在役acmer兼鸽子人，搭个小铺子存点东西以备不时之需的同时满足收集癖（？ "},{"date":"2021-11-15T12:50:20.412Z","url":"/2021/11/15/%E8%8D%A7%E6%83%91%E7%9A%84%E6%A8%A1%E6%9D%BF/","categories":[["undefined",""]],"content":"在记了在记了 奇奇怪怪小妙招 快读 归并排序求逆序对 字典树 最短路堆优化 dijkstra特别注意，dj不能处理负边问题 最小生成树kruskal LCA dfs序前闭后开，dfs序可以将树以区间的形式储存，从而使用线段树等高级结构进行处理 单调队列​ O(n) 处理 给定长度区间最值 树状数组空间复杂度O(n) ！！！ 仅支持单点修改 以1为起点 常数优于线段树 ST表离线O(nlogn)预处理， O（1）询问 线段树常规 加法乘法线段树 区间第k大 主席树 内带离散化模板 最长公共子序列 线性筛 哈希往往在以图为基本单元进行操作的场景下 可以用哈希将图储存为数 使得操作复杂度降低 对于哈希 可以理解为把每一位上的字符看作一个p进制的对应位上的权 那么对于一个字符串ABCD 可以理解为 $A * P^3 + B * P^2 + C * P^1 + D * P^0$ 对于字符A 可以理解为 $A * P^0$ 当我们获取BCD时应将BCD加入过程中A所的的$P^x$加上 可知 x = $P^(串A长 - 串B长)$ 进阶一下 对于ABCDEF 想要拆出ABF也就是间隔CDE求取 通过ask我们可以获取 AB = $A * P^1 + B * P^0$ F = $F * P^0$ 只需要把靠左部分乘以靠右部分长度对应的权 即 $p^(右串长)$ 玄不救非，一组素数不行换换试试吧 高精度 "}]